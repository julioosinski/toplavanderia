plugins {
    id 'com.android.application'
}

android {
    namespace "app.lovable.toplavanderia"
    compileSdk 34

    defaultConfig {
        applicationId "com.toplavanderia.app"
        minSdk 22
        targetSdk 34
        versionCode 2
        versionName "2.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled false
            shrinkResources false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    packagingOptions {
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libjsc.so'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/*.kotlin_module'
    }
    
    // Desabilitar verificação de classes duplicadas temporariamente
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    
    // Configurações para resolver classes duplicadas
    configurations.all {
        resolutionStrategy {
            force 'org.jetbrains.kotlin:kotlin-stdlib:1.9.10'
        }
    }
    
    // Configuração para resolver classes duplicadas
    
    // Configuração para resolver classes duplicadas do PayGo
    packagingOptions {
        pickFirst '**/META-INF/DEPENDENCIES'
        pickFirst '**/META-INF/LICENSE'
        pickFirst '**/META-INF/LICENSE.txt'
        pickFirst '**/META-INF/NOTICE'
        pickFirst '**/META-INF/NOTICE.txt'
        pickFirst '**/META-INF/ASL2.0'
        pickFirst '**/META-INF/*.kotlin_module'
        pickFirst '**/META-INF/versions/9/previous-compilation-data.bin'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/*.kotlin_module'
    }
    
    // Desabilitar verificação de duplicatas
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    
    // Desabilitar verificação de classes duplicadas para PayGo
    tasks.whenTaskAdded { task ->
        if (task.name == 'checkDebugDuplicateClasses') {
            task.enabled = false
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    
    // AndroidX Core
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core:1.10.1'
    implementation 'androidx.activity:activity:1.7.2'
    implementation 'androidx.fragment:fragment:1.6.1'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'androidx.webkit:webkit:1.7.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.material:material:1.9.0'
    
        // PayGO Library - INTEGRAÇÃO REAL
        implementation(name: 'InterfaceAutomacao-v2.1.0.6', ext: 'aar')
        implementation 'org.apache.commons:commons-lang3:3.9'
        implementation 'com.google.code.gson:gson:2.10.1'
    
    // Capacitor - Comentado temporariamente para build básico
    // implementation project(':capacitor-android')
    // implementation project(':capacitor-app')
    // implementation project(':capacitor-device')
    // implementation project(':capacitor-splash-screen')
    // implementation project(':capacitor-status-bar')
    
    // Test dependencies
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

configurations.all {
    resolutionStrategy {
        force 'org.jetbrains.kotlin:kotlin-stdlib:1.9.10'
        force 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.10'
        force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.10'
    }
}

// apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}